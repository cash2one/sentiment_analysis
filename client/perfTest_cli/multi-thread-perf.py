#coding=utf-8import threadingfrom perf_test import *import sysclass FuncThread(threading.Thread):    def __init__(self, func, *params, **paramMap):        threading.Thread.__init__(self)        self.func = func        self.params = params        self.paramMap = paramMap        self.rst = None        self.finished = False        self.flag = True    def run(self):        try:            self.rst = self.func(*self.params, **self.paramMap)        except:            import traceback            print traceback.format_exc()            self.flag = False        self.finished = True    def getResult(self):        return self.rst    def isFinished(self):        return self.finisheddef doInThread(func, *params, **paramMap):    ft = FuncThread(func, *params, **paramMap)    ft.start()    return ftdef usage():    print "usage:"    print "python multi-thread-perf.py para-cnt ip port funcName strContent iterTimes"    print "e.g. python multi-thread-perf.py 5 localhost 9001 getReview 'this is a test' 1000"    if __name__ == "__main__":    if len(sys.argv) != 7:        usage()    else:        for i in range(0,int(sys.argv[1])):        	doInThread(testPerf, sys.argv[2], int(sys.argv[3]), sys.argv[4],sys.argv[5],int(sys.argv[6]))